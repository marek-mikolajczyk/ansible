 ---
### generate ssh key on host system
### launch by ansible-playbook ssh_pass_key.yml --vault-password-file=vault_password


- hosts: localhost
  gather_facts: False
  tasks:
    - name: "check if pubkey exists"
      stat:
        path: /root/.ssh/id_rsa
      register: keyexists
    - name: "debug keyexists"
      debug:
        var: keyexists

# alternative version for generating ssh
#    - name: "generate ssh key"
#      command: "ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ''"
#      when:  "'false' in keyexists.stat.exists"

    - name: "generate ssh key"
      user:
        name: root
        generate_ssh_key: yes

### deploy ssh key on client vm
- hosts: 81ce001t
  vars:
    ansible_host: 192.168.100.128
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    ansible_user: root
    ansible_ssh_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          30373561363533333736303637383466363333366331326334623230366463393636383665303738
          6137363066396463313734356537366235323165356231360a613934666261633266303862626530
          38373163656231626164643235383838376537353166303839323436373562646132363833613563
          6165363166333832650a646465356161383161626366636631633432623433343161316263626164
          3161
  gather_facts: False
  tasks:

# check if you have correct root password
    - name: check uptime if rootpw from vault works
      command: uptime
      register: output
    - name: "debug"
      debug: var=output.stdout

# works, now let's copy ssh key
    - name: deploy ssh
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
      register: result


# test again without password
    - name: check uptime if rootpw from vault works
      command: uptime
      register: output
    - name: "debug"
      debug: var=output.stdout
...
