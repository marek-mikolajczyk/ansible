---
- name: include ovirt password
  no_log: true
  include_vars: ovirt_password.yml
- name: auth in engine
  block:
       # Create a vault with `ovirt_password` variable which store your
       # oVirt/RHV user's password, and include that yaml file with variable:
       #- include_vars: ovirt_password.yml

       - name: Obtain SSO token with using username/password credentials
         ovirt_auth:
           url: https://engine.marekexample.com/ovirt-engine/api
           username: admin@internal
#           ca_file: pki-resource.cer 
           password: "{{ ovirt_password }}"

       # Previous task generated I(ovirt_auth) fact, which you can later use
       # in different modules as follows:

       - name: Run VM with cloud init, with multiple network interfaces
         ovirt_vms:
           auth: "{{ ovirt_auth }}"
           name: "{{ vm_name }}"
           template: "{{ template }}"
           clone: yes
           cluster: Default
           memory: 16GiB
           memory_guaranteed: 16GiB
           cpu_cores: 4
           high_availability: true
           cloud_init_persist: true
           cloud_init:
             nic_name: eth0
             nic_boot_protocol: static
             nic_ip_address: 192.168.0.21
             nic_netmask: 255.255.255.0
             nic_gateway: 192.168.0.1
             nic_on_boot: true
             dns_servers: 192.168.0.212 192.168.0.1
             dns_search: marekexample.com
             custom_script: |
               write_files:
                - content: |
                  Hello, world!
                  path: /etc/cloud/cloud-init.disabled
                  permissions: '0644'
                - content: |
                    network: {config: disabled} 
                  path: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg 
                  permissions: '0700'
             host_name: "{{ vm_name }}"
             authorized_ssh_keys: "{{ lookup('file', 'sshkeys') }}"
             user_name: root
             root_password: haslo123
           graphical_console: 
             protocol:
               - spice
               - vnc
           type: server
           wait: true
           operating_system: rhel_7x64
           serial_console: true
           cloud_init_nics:
           - nic_name: eth0


             #       - name: start vm
             #ovirt_vms:
             #auth: "{{ ovirt_auth }}"
             #name: "{{ vm_name }}"
             #state: running
             #cloud_init_persist: true

       - name: wait admin to manually start server (obirt bug)
         pause:
             seconds: 120 

  always:
      - name: Always revoke the SSO token
        ovirt_auth:
          state: absent
          ovirt_auth: "{{ ovirt_auth }}"

