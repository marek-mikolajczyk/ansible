---
- name: include ovirt password
  no_log: true
  include_vars: ovirt_password.yml
- name: auth in engine
  block:
       # Create a vault with `ovirt_password` variable which store your
       # oVirt/RHV user's password, and include that yaml file with variable:
       #- include_vars: ovirt_password.yml

       - name: Obtain SSO token with using username/password credentials
         ovirt_auth:
           url: https://engine.marekexample.com/ovirt-engine/api
           username: admin@internal
#           ca_file: pki-resource.cer 
           password: "{{ ovirt_password }}"

       # Previous task generated I(ovirt_auth) fact, which you can later use
       # in different modules as follows:

       - name: Run VM with cloud init, with multiple network interfaces
         ovirt_vms:
           auth: "{{ ovirt_auth }}"
           name: "{{ vm_name }}"
           template: "{{ template }}"
           cluster: Default
           memory: 20GiB
           memory_guaranteed: 16GiB
           cpu_cores: 4
           state: present
#           storage_domain: rhev_nfs1
           high_availability: true
           high_availability_priority: 50  # Available from Ansible 2.5
           cloud_init_persist: true
           cloud_init:
             nic_boot_protocol: static
             nic_name: eth0
             nic_ip_address: 192.168.0.21
             nic_netmask: 255.255.255.0
             nic_gateway: 192.168.0.1
             dns_servers: '192.168.0.212 192.168.0.1'
             dns_search: 'marekexample.com'
             nic_on_boot: true
             host_name: "{{ vm_name }}"
             custom_script: |
               write_files:
                - content: |
                    Hello, world!
                  path: /tmp/greeting.txt
                  permissions: '0644'
             authorized_ssh_keys: "{{ lookup('file', 'sshkeys') }}"
             user_name: root
             root_password: 'haslo123'

             #- name: wait a little
             # pause:
             # seconds: 120

             # - name: start vm
             #ovirt_vms:
             # auth: "{{ ovirt_auth }}"
             # name: "{{ vm_name }}"
             # state: running
             # cloud_init_persist: true

       - name: wait vm to spin up
         pause:
            seconds: 240 

  always:
      - name: Always revoke the SSO token
        ovirt_auth:
          state: absent
          ovirt_auth: "{{ ovirt_auth }}"

